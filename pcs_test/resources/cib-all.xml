<cib epoch="558" num_updates="0" admin_epoch="0" validate-with="pacemaker-3.8" crm_feature_set="3.15.0" update-origin="rh7-3" update-client="crmd" cib-last-written="Thu Aug 23 16:49:17 2012" have-quorum="0" dc-uuid="2">
  <configuration>
    <crm_config/>
    <nodes/>
    <resources>
      <!--
    resources in this file has been created using this set of commands in resource-commands file
        -->
      <bundle id="B1">
        <docker image="pcs:test" replicas="4" replicas-per-host="2" run-command="/bin/true" network="extra_network_settings" options="extra_options"/>
        <network ip-range-start="192.168.100.200" control-port="12345" host-interface="eth0" host-netmask="24">
          <port-mapping port="1001" id="B1-port-map-1001"/>
          <port-mapping port="2000" internal-port="2002" id="B1-port-map-2000"/>
          <port-mapping range="3000-3300" id="B1-port-map-3000-3300"/>
        </network>
        <storage>
          <storage-mapping source-dir="/tmp/docker1a" target-dir="/tmp/docker1b" id="B1-storage-map"/>
          <storage-mapping source-dir="/tmp/docker2a" target-dir="/tmp/docker2b" id="B1-storage-map-1"/>
          <storage-mapping source-dir-root="/tmp/docker3a" target-dir="/tmp/docker3b" id="B1-storage-map-2"/>
          <storage-mapping source-dir-root="/tmp/docker4a" target-dir="/tmp/docker4b" id="B1-storage-map-3"/>
        </storage>
        <meta_attributes id="B1-meta_attributes">
          <nvpair id="B1-meta_attributes-is-managed" name="is-managed" value="false"/>
          <nvpair id="B1-meta_attributes-target-role" name="target-role" value="Stopped"/>
        </meta_attributes>
      </bundle>
      <bundle id="B2">
        <docker image="pcs:test"/>
        <primitive id="R1" class="ocf" type="Dummy" provider="pacemaker">
          <operations>
            <op name="monitor" timeout="20s" interval="10s" id="R1-monitor-interval-10s"/>
          </operations>
        </primitive>
      </bundle>
      <primitive id="R7" class="ocf" type="Dummy" provider="pacemaker">
        <instance_attributes id="R7-instance_attributes">
          <nvpair id="R7-instance_attributes-envfile" name="envfile" value="/dev/null"/>
          <nvpair id="R7-instance_attributes-fake" name="fake" value="looool"/>
        </instance_attributes>
        <meta_attributes id="R7-meta_attributes">
          <nvpair id="R7-meta_attributes-anotherone" name="anotherone" value="something&apos;&quot;special"/>
          <nvpair id="R7-meta_attributes-anotherone0" name="another one0" value="a + b = c"/>
          <nvpair id="R7-meta_attributes-m1" name="m1" value="value1"/>
          <nvpair id="R7-meta_attributes-m10" name="m10" value="value1"/>
          <nvpair id="R7-meta_attributes-meta2" name="meta2" value="valueofmeta2isthisverylongstring"/>
          <nvpair id="R7-meta_attributes-meta20" name="meta20" value="valueofmeta2isthisverylongstring"/>
        </meta_attributes>
        <operations>
          <op name="custom_action" interval="10s" id="R7-custom_action-interval-10s">
            <instance_attributes id="R7-custom_action-interval-10s-instance_attributes">
              <nvpair id="R7-custom_action-interval-10s-instance_attributes-OCF_CHECK_LEVEL" name="OCF_CHECK_LEVEL" value="2"/>
            </instance_attributes>
          </op>
          <op name="migrate_from" timeout="20s" interval="0s" id="R7-migrate_from-interval-0s"/>
          <op name="migrate_to" timeout="20s" interval="0s" id="R7-migrate_to-interval-0s" enabled="false" record-pending="false"/>
          <op name="monitor" timeout="20s" interval="10s" id="R7-monitor-interval-10s"/>
          <op name="reload" timeout="20s" interval="0s" id="R7-reload-interval-0s"/>
          <op name="reload-agent" timeout="20s" interval="0s" id="R7-reload-agent-interval-0s"/>
          <op name="start" timeout="20s" interval="0s" id="R7-start-interval-0s"/>
          <op name="stop" timeout="20s" interval="0s" id="R7-stop-interval-0s"/>
        </operations>
      </primitive>
      <primitive id="S2" class="stonith" type="fence_kdump">
        <operations>
          <op name="monitor" interval="60s" id="S2-monitor-interval-60s"/>
        </operations>
      </primitive>
      <group id="G2">
        <primitive id="R5" class="ocf" type="Dummy" provider="pacemaker">
          <operations>
            <op name="monitor" timeout="20s" interval="10s" id="R5-monitor-interval-10s"/>
          </operations>
        </primitive>
        <primitive id="S1" class="stonith" type="fence_kdump">
          <instance_attributes id="S1-instance_attributes">
            <nvpair id="S1-instance_attributes-nodename" name="nodename" value="testnodename"/>
          </instance_attributes>
          <operations>
            <op name="monitor" interval="60s" id="S1-monitor-interval-60s"/>
          </operations>
        </primitive>
        <meta_attributes id="G2-meta_attributes">
          <nvpair id="G2-meta_attributes-meta1" name="meta1" value="metaval1"/>
          <nvpair id="G2-meta_attributes-meta2" name="meta2" value="metaval2"/>
        </meta_attributes>
      </group>
      <clone id="G1-clone">
        <group id="G1">
          <primitive id="R2" class="ocf" type="Stateful" provider="pacemaker">
            <operations>
              <op name="monitor" timeout="20s" interval="10s" id="R2-monitor-interval-10s"/>
            </operations>
          </primitive>
          <primitive id="R3" class="ocf" type="Stateful" provider="pacemaker">
            <operations>
              <op name="monitor" timeout="20s" interval="10s" id="R3-monitor-interval-10s"/>
            </operations>
          </primitive>
          <primitive id="R4" class="ocf" type="Stateful" provider="pacemaker">
            <operations>
              <op name="monitor" timeout="20s" interval="10s" id="R4-monitor-interval-10s"/>
            </operations>
          </primitive>
        </group>
        <meta_attributes id="G1-clone-meta_attributes">
          <nvpair id="G1-clone-meta_attributes-promotable" name="promotable" value="true"/>
        </meta_attributes>
      </clone>
      <clone id="R6-clone">
        <primitive id="R6" class="ocf" type="Dummy" provider="pacemaker">
          <operations>
            <op name="migrate_from" timeout="20s" interval="0s" id="R6-migrate_from-interval-0s"/>
            <op name="migrate_to" timeout="20s" interval="0s" id="R6-migrate_to-interval-0s"/>
            <op name="monitor" timeout="20s" interval="10s" id="R6-monitor-interval-10s"/>
            <op name="reload" timeout="20s" interval="0s" id="R6-reload-interval-0s"/>
            <op name="reload-agent" timeout="20s" interval="0s" id="R6-reload-agent-interval-0s"/>
            <op name="start" timeout="20s" interval="0s" id="R6-start-interval-0s"/>
            <op name="stop" timeout="20s" interval="0s" id="R6-stop-interval-0s"/>
          </operations>
        </primitive>
      </clone>
    </resources>
    <constraints>
      <!--
    constraints in this file has been created using a set of commands in constraint-commands file
        -->
      <rsc_location id="location-R7-non-existing-node--10000" rsc="R7" node="non-existing-node" score="-10000"/>
      <rsc_location id="location-R7-another-one--INFINITY" rsc="R7" node="another-one" score="-INFINITY"/>
      <rsc_location id="location-R7-localhost-INFINITY" rsc="R7" node="localhost" score="INFINITY" resource-discovery="always"/>
      <rsc_location id="location-G2-localhost-INFINITY" rsc="G2" node="localhost" score="INFINITY"/>
      <rsc_location id="location-R-localhost-INFINITY" rsc-pattern="R*" node="localhost" score="INFINITY"/>
      <rsc_location id="loc_constr_with_expired_rule" rsc="B2">
        <rule id="loc_constr_with_expired_rule-rule" score="500">
          <date_expression id="loc_constr_with_expired_rule-rule-expr" operation="lt" end="2000-01-01"/>
        </rule>
      </rsc_location>
      <rsc_location id="loc_constr_with_not_expired_rule" rsc="R6-clone">
        <rule id="loc_constr_with_not_expired_rule-rule" boolean-op="and" score="500" role="Unpromoted">
          <expression id="loc_constr_with_not_expired_rule-rule-expr" operation="eq" attribute="#uname" value="node1"/>
          <date_expression id="loc_constr_with_not_expired_rule-rule-expr-1" operation="gt" start="2000-01-01"/>
        </rule>
        <rule id="loc_constr_with_not_expired_rule-rule-1" boolean-op="and" role="Promoted" score-attribute="test-attr">
          <date_expression id="loc_constr_with_not_expired_rule-rule-1-expr" operation="gt" start="2010-12-31"/>
          <expression id="loc_constr_with_not_expired_rule-rule-1-expr-1" operation="eq" attribute="#uname" value="node1"/>
        </rule>
      </rsc_location>
      <rsc_order first="R7" then="G2" score="-123" require-all="false" first-action="stop" then-action="stop" symmetrical="false" id="order-R7-G2-mandatory"/>
      <rsc_order first="G2" then="B2" kind="Optional" first-action="start" then-action="start" id="order-G2-B2-Optional"/>
      <rsc_order kind="Optional" id="order_set_B2R6-cloneSe">
        <resource_set action="stop" require-all="false" id="order_set_B2R6-cloneSe_set">
          <resource_ref id="B2"/>
          <resource_ref id="R6-clone"/>
        </resource_set>
        <resource_set action="promote" sequential="false" id="order_set_B2R6-cloneSe_set-1">
          <resource_ref id="G1-clone"/>
        </resource_set>
      </rsc_order>
      <rsc_colocation rsc="G1-clone" with-rsc="R6-clone" score="-100" rsc-role="Promoted" with-rsc-role="Stopped" id="colocation-G1-clone-R6-clone--100"/>
      <rsc_colocation score="-1" id="colocation_set_R7G2B2">
        <resource_set role="Started" id="colocation_set_R7G2B2_set">
          <resource_ref id="R7"/>
          <resource_ref id="G2"/>
        </resource_set>
        <resource_set sequential="false" id="colocation_set_R7G2B2_set-1">
          <resource_ref id="B2"/>
          <resource_ref id="R6-clone"/>
        </resource_set>
      </rsc_colocation>
      <rsc_ticket loss-policy="demote" rsc-role="Promoted" ticket="custom-ticket1" rsc="G1-clone" id="ticket-custom-ticket1-G1-clone-Promoted"/>
      <rsc_ticket ticket="ticket2" id="ticket_set_R7B2G2">
        <resource_set role="Stopped" id="ticket_set_R7B2G2_set">
          <resource_ref id="R7"/>
          <resource_ref id="B2"/>
          <resource_ref id="G2"/>
        </resource_set>
      </rsc_ticket>
    </constraints>
  </configuration>
  <status/>
</cib>
