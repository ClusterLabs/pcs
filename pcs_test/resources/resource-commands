# set of commands to generate various resources configuration
pcs resource bundle create B1 --force \
  container docker \
    image=pcs:test replicas=4 replicas-per-host=2 run-command=/bin/true network=extra_network_settings options=extra_options \
  network ip-range-start=192.168.100.200 control-port=12345 host-interface=eth0 host-netmask=24 \
  port-map port=1001 \
  port-map port=2000 internal-port=2002 \
  port-map range=3000-3300 \
  storage-map source-dir=/tmp/docker1a target-dir=/tmp/docker1b \
  storage-map source-dir=/tmp/docker2a target-dir=/tmp/docker2b \
  storage-map source-dir-root=/tmp/docker3a target-dir=/tmp/docker3b \
  storage-map source-dir-root=/tmp/docker4a target-dir=/tmp/docker4b \
  meta is-managed=false target-role=Stopped;
pcs resource bundle create B2 \
  container docker \
    image=pcs:test;
pcs resource create R1 ocf:pacemaker:Dummy --no-default-ops bundle B2 --force;
pcs resource create R2 ocf:pacemaker:Stateful --no-default-ops;
pcs resource create R3 ocf:pacemaker:Stateful --no-default-ops;
pcs resource create R4 ocf:pacemaker:Stateful --no-default-ops;
pcs resource create R5 ocf:pacemaker:Dummy --no-default-ops;
pcs resource create R6 ocf:pacemaker:Dummy;
pcs resource create R7 ocf:pacemaker:Dummy --force \
  fake=looool envfile=/dev/null \
  op custom_action interval=10s OCF_CHECK_LEVEL=2 \
    migrate_to interval=0s id=R7-migrate_to-interval-0s timeout=20s enabled=0 record-pending=0 \
  meta m1=value1 meta2=valueofmeta2isthisverylongstring "anotherone=something'\"special" m10=value1 meta20=valueofmeta2isthisverylongstring "another one0=a + b = c";
pcs stonith create S1 fence_kdump nodename=testnodename;
pcs stonith create S2 fence_kdump;
pcs resource group add G1 R2 R3 R4;
pcs resource group add G2 R5 S1
pcs resource meta G2 meta1=metaval1 meta2=metaval2;
pcs resource clone G1 meta promotable=true;
pcs resource clone R6;
