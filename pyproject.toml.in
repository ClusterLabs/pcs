[project]
name = "pcs"
version = "@VERSION@"
requires-python = ">=3.12"
description = "Pacemaker/Corosync Configuration System"
authors = [
  {name = "Chris Feist", email = "cfeist@redhat.com"},
]
readme = "README.md"

[project.urls]
Repository = "https://github.com/ClusterLabs/pcs"

[build-system]
requires = ["setuptools >= 66.1"]
build-backend = "setuptools.build_meta"

[project.scripts]
pcs = "pcs.entry_points.cli:main"
pcsd = "pcs.entry_points.daemon:main"
pcs_snmp_agent = "pcs.entry_points.snmp_agent:main"
pcs_internal = "pcs.entry_points.internal:main"

[tool.setuptools]
# True by default in pyproject.toml, keeping old behavior
include-package-data = false

# If newly excluded packages still persist, try to remove `./*.egg-info` and
# `./build`. Don't waste time: https://stackoverflow.com/a/59686298/22796102
[tool.setuptools.packages.find]
exclude = [
  "pcs_*",
  "build*",
  "@PACKAGE_WEBUI_BACKEND@",
]

[tool.setuptools.package-data]
pcs = ["py.typed"]



################################################################################
# NON-BUILD TOOLS
################################################################################

# Required versions of linter tools: see dev_requirements.txt

# This project should not contain any issues reported by any linter when using
# this command to run linters on the whole project:
# $ make check

[tool.black]
line-length = 80
target-version = ['py312']

[tool.isort]
profile = "black"
line_length = 80
multi_line_output = 3
force_grid_wrap = 2
atomic = true
py_version = 312
skip_gitignore = true
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'FIRSTPARTY', 'TESTS', 'LOCALFOLDER']
known_first_party = ["pcs"]
known_tests = ["pcs_test"]
supported_extensions = ["py", "py.in"]

[tool.pylint.main]
disable = [
  # not critical, plus we use str.format() for readability
  "consider-using-f-string",
  # TODO is used to mark e.g. deprecations which are to be resolved in next pcs
  # major version
  "fixme",
  # handled by black
  "line-too-long",
  # we dont require pointless docstring to be present
  "missing-docstring",
  "similarities",
  "unspecified-encoding",
  # lot of dict() in code to be replaced, not worth the effort now
  "use-dict-literal",
  # handled by isort
  "wrong-import-order",
]
extension-pkg-allow-list = ["lxml.etree", "pycurl"]
load-plugins = ["pylint.extensions.no_self_use"]
persistent = false
reports = false
score = false

[tool.pylint.basic]
# Everything in module context is a constant, but our naming convention allows
# constants to have the same name format as variables
const-rgx = "(([A-Z_][A-Z0-9_]*)|(__.*__))|([a-z_][a-z0-9_]*)$"
good-names = [
  "e",
  "i",
  "op",
  "ip",
  "el",
  "maxDiff",
  "cm",
  "ok",
  "T",
  "dr",
  "setUp",
  "tearDown",
]

[tool.pylint.design]
max-args = 8
max-parents = 10
max-positional-arguments = 8
min-public-methods = 0

[tool.pylint.format]
max-module-lines = 1500
max-line-length = 80

[tool.pylint.variables]
dummy-variables-rgx = "_$|dummy"

[tool.ruff]
# ruff settings docs: https://docs.astral.sh/ruff/settings/
line-length = 80
target-version = "py312"

[tool.ruff.lint]
# ruff rules docs: https://docs.astral.sh/ruff/rules/
# pylint rules in ruff: # https://github.com/astral-sh/ruff/issues/970
select = [
  "A",
  "ARG",
  "ASYNC",
  "B",
  "C4",
  "E4",
  "E7",
  "E9",
  "F",
  "G",
  "I",
  "LOG",
  "PERF",
  "PIE",
  "PL", # pylint convention, error, refactoring, warning
  "RET",
  "SIM",
  "SLF",
  "SLOT",
  "TC",
]
# ruff does not respect pylint ignore directives
# https://github.com/astral-sh/ruff/issues/1203
ignore = [
  "ARG005", # https://docs.astral.sh/ruff/rules/unused-lambda-argument/
  "C408", # https://docs.astral.sh/ruff/rules/unnecessary-collection-call/
  "PLR2004", # magic-value-comparison (99)
  "PLR0913", # too-many-arguments (54)
  "PLR0912", # too-many-branches (49)
  "PLR0915", # too-many-statements (31)
  "PLW2901", # redefined-loop-name (22)
  "PLR5501", # collapsible-else-if (14)
  "PLW0603", # global-statement (9)
  "PLR0911", # too-many-return-statements (6)
  "PLW1509", # subprocess-popen-preexec-fn (3)
  "PLW0602", # global-variable-not-assigned (1)
  "SIM102", # https://docs.astral.sh/ruff/rules/collapsible-if/
]

[tool.ruff.lint.isort]
# known deviations from isort:
#  https://docs.astral.sh/ruff/faq/#how-does-ruffs-import-sorting-compare-to-isort
#  https://github.com/astral-sh/ruff/issues/1381
#  https://github.com/astral-sh/ruff/issues/2104
known-first-party = ["pcs"]
section-order = ["future", "standard-library", "third-party", "first-party", "tests", "local-folder"]

[tool.ruff.lint.isort.sections]
"tests" = ["pcs_test"]

[tool.ruff.lint.per-file-ignores]
# Ignore `F401` https://docs.astral.sh/ruff/rules/unused-import/
"__init__.py" = ["F401"]
"pcs/entry_points/*.py" = ["F401"]
# Ignore `SLF001` https://docs.astral.sh/ruff/rules/private-member-access/
"pcs_test/**.py" = ["SLF001"]

[tool.ruff.lint.pylint]
max-args = 8
max-positional-args = 8
