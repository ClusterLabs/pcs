# Required version of pylint: see requirements.txt
#
# To install linters and their dependencies, run:
# $ make python_static_code_analysis_reqirements
#
# This project should not contain any issues reported by any linter when using
# this command to run linters on the whole project:
# $ make black_check python_static_code_analysis

[MASTER]
extension-pkg-whitelist=lxml.etree,pycurl
load-plugins=pylint.extensions.no_self_use

[MESSAGES CONTROL]
# consider-using-f-string - not critical, plus we use str.format() for readability
# fixme - TODO is used to mark e.g. deprecations which are to be resolved in next pcs major version
# line-too-long - handled by black
# missing-docstring - we dont require pointless docstring to be present
# trailing-whitespace - handled by black
# use-dict-literal - lot of dict() in code to be replaced, not worth the effort now
# wrong-import-order - handled by isort
disable=consider-using-f-string, fixme, line-too-long, missing-docstring, unspecified-encoding, use-dict-literal, wrong-import-order
# Everything in module context is a constant, but our naming convention allows
# constants to have the same name format as variables
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))|([a-z_][a-z0-9_]*)$

[DESIGN]
max-module-lines=1500
max-args=8
max-parents=10
min-public-methods=0

[BASIC]
good-names=e, i, op, ip, el, maxDiff, cm, ok, T, dr, setUp, tearDown

[VARIABLES]
# A regular expression matching the name of dummy variables (i.e. expectedly
# not used).
dummy-variables-rgx=_$|dummy

[FORMAT]
# Maximum number of characters on a single line.
max-line-length=80
