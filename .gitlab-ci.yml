default:
  before_script:
    - git remote add upstream https://github.com/ClusterLabs/pcs.git
    - git fetch upstream

.parallel:
  parallel:
    matrix:
      - BASE_IMAGE_NAME: ["PcsRhel10Next"]
        OS_TAG: "centos10"
  tags:
    - ${OS_TAG}

stages:
  - stage1
  - stage2

rpm_build:
  extends: .parallel
  stage: stage1
  script:
    - ./autogen.sh
    - ./configure --enable-local-build --enable-individual-bundling  --enable-webui
    - make CI_BRANCH=${BASE_IMAGE_NAME} rpm/pcs.spec
    - dnf builddep -y rpm/pcs.spec
    - make CI_BRANCH=${BASE_IMAGE_NAME} rpm
    - mkdir -p rpms && cp -v $(find rpm  -type f -name '*.rpm' -not -name '*.src.rpm') rpms
  artifacts:
    expire_in: 1 week
    paths:
      - rpms

distcheck:
  extends: .parallel
  stage: stage1
  script:
    - "pip3 install
        dacite
        tornado
        pyagentx
      "
    - ./autogen.sh
    - ./configure --enable-local-build --enable-individual-bundling --enable-webui
    - make distcheck DISTCHECK_CONFIGURE_FLAGS='--enable-local-build --enable-individual-bundling --enable-webui'
    - rename --verbose .tar. ".${BASE_IMAGE_NAME}.tar." pcs*.tar.*
    - mkdir -p dist && cp -v pcs*.tar.* dist/
  artifacts:
    expire_in: 1 week
    paths:
      - dist

typos:
  extends: .parallel
  stage: stage1
  script:
    - ./autogen.sh
    - ./configure --enable-local-build --enable-typos-check --enable-individual-bundling
    - make
    - make typos_check

ruff_isort:
  extends: .parallel
  stage: stage1
  script:
    - python3 -m pip install --upgrade -r dev_requirements.txt
    - ./autogen.sh
    - ./configure --enable-local-build --enable-dev-tests --enable-tests-only --enable-individual-bundling
    - make ruff_isort_check

ruff_format:
  extends: .parallel
  stage: stage1
  script:
    - python3 -m pip install --upgrade -r dev_requirements.txt
    - ./autogen.sh
    - ./configure --enable-local-build --enable-dev-tests --enable-tests-only --enable-individual-bundling
    - make ruff_format_check

ruff_lint:
  extends: .parallel
  stage: stage1
  script:
    - python3 -m pip install --upgrade -r dev_requirements.txt
    - ./autogen.sh
    - ./configure --enable-local-build --enable-dev-tests --enable-tests-only --enable-individual-bundling
    - make
    - make ruff_lint

mypy:
  extends: .parallel
  stage: stage1
  script:
    - python3 -m pip install --upgrade -r dev_requirements.txt
    - ./autogen.sh
    - ./configure --enable-local-build --enable-dev-tests --enable-individual-bundling
    - make
    - make mypy

ruby_tests:
  extends: .parallel
  stage: stage1
  script:
    - ./autogen.sh
    - ./configure --enable-local-build --enable-individual-bundling
    - make
    - make pcsd-tests

python_tier0_tests:
  extends: .parallel
  stage: stage1
  script:
    # make sure that tier0 tests run without cluster packages installed
    - dnf remove -y corosync* pacemaker* fence-agents* resource-agents* booth* sbd
    - ./autogen.sh
    - ./configure --enable-local-build --enable-individual-bundling
    - make
    - make tests_tier0

python_tier1_tests:
  extends: .parallel
  stage: stage2
  needs:
    - rpm_build
  script:
    - "dnf install -y rpms/pcs-*${BASE_IMAGE_NAME}*$(rpm -E %{dist}).*.rpm"
    - ./autogen.sh
    - ./configure --enable-local-build --enable-destructive-tests --enable-tests-only --enable-individual-bundling --enable-webui
    - rm -rf pcs pcsd pcs_bundled # make sure we are testing installed package
    - pcs_test/suite -v --installed --tier1

python_smoke_tests:
  extends: .parallel
  stage: stage2
  needs:
    - rpm_build
  script:
    - "dnf install -y rpms/pcs-*${BASE_IMAGE_NAME}*$(rpm -E %{dist}).*.rpm"
    - systemctl start pcsd
    - sleep 2
    - ./autogen.sh
    - ./configure --enable-local-build --enable-individual-bundling --enable-webui
    - make
    - rm -rf pcs
    - pcs_test/smoke.sh
  artifacts:
    paths:
      - /var/log/pcsd/
    when: on_failure
    expire_in: 1 week
