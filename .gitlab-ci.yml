variables:
  APP_VERSION: "0.0.1+ci"
  DIST_VERSION: "${APP_VERSION}.${CI_PROJECT_NAMESPACE}-${CI_COMMIT_SHORT_SHA}"
  RPM_VERSION: "${APP_VERSION}-1.${CI_PROJECT_NAMESPACE}.$CI_COMMIT_SHORT_SHA"
  BASE_IMAGE_NAME: "pcs-0.10"

default:
  before_script:
    - "echo ${DIST_VERSION} > .tarball-version"
    - cat .tarball-version

stages:
  - stage1
  - stage2

rpm_build:
  stage: stage1
  script:
    - ./autogen.sh
    - ./configure --enable-local-build
    - make rpm/pcs.spec
    - dnf builddep -y rpm/pcs.spec
    - make rpm
    - mkdir -p rpms && cp -v $(find rpm  -type f -name '*.rpm' -not -name '*.src.rpm') rpms
  artifacts:
    expire_in: 1 week
    paths:
      - rpms

distcheck:
  stage: stage1
  script:
    - "pip3 install
        dacite
        tornado
        pyagentx
      "
    - ./autogen.sh
    - ./configure --enable-local-build
    - make distcheck DISTCHECK_CONFIGURE_FLAGS='--enable-local-build'
    - mkdir -p dist && cp -v pcs*.tar.* dist/
  artifacts:
    expire_in: 1 week
    paths:
      - dist

typos:
  stage: stage1
  script:
    - ./autogen.sh
    - ./configure --enable-local-build --enable-typos-check
    - make
    - make typos_check

black:
  stage: stage1
  script:
    - python3 -m pip install --upgrade -r dev_requirements.txt
    - ./autogen.sh
    - ./configure --enable-local-build --enable-dev-tests --enable-tests-only
    - make black_check

isort:
  stage: stage1
  script:
    - python3 -m pip install --upgrade -r dev_requirements.txt
    - ./autogen.sh
    - ./configure --enable-local-build --enable-dev-tests --enable-tests-only
    - make isort_check

pylint:
  stage: stage1
  script:
    - python3 -m pip install --upgrade -r dev_requirements.txt
    - ./autogen.sh
    - ./configure --enable-local-build --enable-dev-tests --enable-parallel-pylint
    - make
    - make pylint

mypy:
  stage: stage1
  script:
    - python3 -m pip install --upgrade -r dev_requirements.txt
    - ./autogen.sh
    - ./configure --enable-local-build --enable-dev-tests
    - make
    - make mypy

ruby_tests:
  stage: stage1
  script:
    - ./autogen.sh
    - ./configure --enable-local-build
    - make
    - make pcsd-tests

python_tier0_tests:
  stage: stage1
  script:
    - python3 -m pip install concurrencytest
    - ./autogen.sh
    - ./configure --enable-local-build
    - make
    - make tests_tier0

python_tier1_tests:
  stage: stage2
  needs:
    - rpm_build
  script:
    - "dnf install -y rpms/pcs-*.rpm"
    - python3 -m pip install concurrencytest
    - ./autogen.sh
    - ./configure --enable-local-build --enable-destructive-tests --enable-tests-only
    - rm -rf pcs pcsd pcs_bundled # make sure we are testing installed package
    - pcs_test/suite -v --installed --tier1

python_smoke_tests:
  stage: stage2
  needs:
    - rpm_build
  script:
    - "dnf install -y rpms/pcs-*.rpm"
    - systemctl start pcsd
    - sleep 2
    - ./autogen.sh
    - ./configure --enable-local-build --enable-tests-only
    - pcs_test/smoke.sh
  artifacts:
    paths:
      - /var/log/pcsd/
    when: on_failure
